0) setup de trabalho
>> git init
>> git remote add origin https://github.com/lccyrillo/investpess-ativo.git

1) Forma geral de trabalho
--> Verificar a branch que estou
--> devo trabalhar na branch da release
>> git branch
--> se não estou na branch correta, vou para a branch correta
>> git checkout refatoracao_conexao

--> trabalho nos arquivos
--> vejo as diferencas
>> git status
--> adiciono os arquivos necessários
>> git add .
--> faço um commit
>> git commit -a -m "alterações de refatoração da conexão"
--> mandar para o repositorio remoto
>> git push

2) se consegui fechar uma versão, posso gerar uma tag
--> listar tags
>> git tag
>> git tag -a v1.2 -m "Versão refatorada com a conexão com singleton"
--> mandar a tag para o servidor remoto
>> git push origin v1.2

3) Se a versão esta fechada e vai para ambiente de homologação ou prod
--> vou para o repositorio de desenvolvimento
>> git checkout developer
>> git merge refatoracao_conexao
>> git push -u origin developer

--> vou para o repositorio de producao
>> git checkout master
>> git merge developer
>> git push -u origin master


git branch master
git add .
git commit -a -m "setup"
git push -u origin master

git branch

git branch developer
git add .
git commit -a -m "setup"
git push -u origin developer

---> mudar o branch de desenvolvimento
git checkout developer

---> mudar o branch de desenvolvimento e criar o novo branch
git checkout -b refatoracao_conexao

---> apagar um branch
git branch -d b_refatoracao_conexao7

---> baixar atualizacoes da brench
---> puxa as alterações da brench remota para local
git pull

--> vou mergear o desenvolvimento feito na branch de refatoracao na branch developer
--> entro na brench developer
>> git checkout developer
>> git merge refatoracao_conexao
>> git push -u origin developer


>> git push -u origin refatoracao_conexao

--> Conceito de tag
--> Para marcar versões importantes - cria a tag
>> git tag -a v1.0 -m "Primeira versão da aplicação."
--> listar tags
>> git tag

>> git show v1.0

--> mandar a tag para o servidor remoto
--> a tag é uma versão apartada da branch
>> git push origin v1.1

--> Repositorios criados por outros desenvolvedores
--> utilizo git fetch para puxar a nova branch

--> analise e inspecao de repositorios
--> conpara versão atual com a master
git diff master
--> ou entao
git diff arquivo1 arquivo2